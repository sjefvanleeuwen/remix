@page "/reset-password"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<PageTitle>Reset Password - RemixHub</PageTitle>

<div class="row justify-content-center mt-5">
    <div class="col-md-6 col-lg-4">
        <div class="card shadow">
            <div class="card-body p-4">
                <h2 class="text-center mb-4">Reset Password</h2>
                
                @if (success)
                {
                    <div class="alert alert-success">
                        <h4 class="alert-heading">Password Reset!</h4>
                        <p>Your password has been successfully reset.</p>
                        <p>You can now login with your new password.</p>
                    </div>
                    <div class="text-center">
                        <a href="login" class="btn btn-primary">Go to Login</a>
                    </div>
                }
                else
                {
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger">@errorMessage</div>
                    }
                    
                    <EditForm Model="model" OnValidSubmit="HandleSubmit">
                        <DataAnnotationsValidator />
                        
                        <div class="mb-3">
                            <label for="newPassword" class="form-label">New Password</label>
                            <InputText id="newPassword" @bind-Value="model.NewPassword" type="password" class="form-control" />
                            <ValidationMessage For="@(() => model.NewPassword)" class="text-danger" />
                            <small class="form-text text-muted">Password must be at least 8 characters with uppercase, lowercase, numbers, and special characters.</small>
                        </div>
                        
                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                            <InputText id="confirmPassword" @bind-Value="model.ConfirmPassword" type="password" class="form-control" />
                            <ValidationMessage For="@(() => model.ConfirmPassword)" class="text-danger" />
                        </div>
                        
                        <div class="d-grid mb-3">
                            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                                @if (isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    <span class="ms-1">Processing...</span>
                                }
                                else
                                {
                                    <span>Reset Password</span>
                                }
                            </button>
                        </div>
                    </EditForm>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private ResetPasswordViewModel model = new ResetPasswordViewModel();
    private bool isLoading = false;
    private bool success = false;
    private string errorMessage = string.Empty;

    [Parameter]
    [SupplyParameterFromQuery]
    public string Email { get; set; }
    
    [Parameter]
    [SupplyParameterFromQuery]
    public string Token { get; set; }

    protected override void OnInitialized()
    {
        if (string.IsNullOrEmpty(Email) || string.IsNullOrEmpty(Token))
        {
            errorMessage = "Invalid password reset link. Please request a new one.";
            return;
        }

        model.Email = Email;
        model.Token = Token;
    }

    private async Task HandleSubmit()
    {
        isLoading = true;
        errorMessage = string.Empty;
        
        try
        {
            var result = await AuthService.ResetPasswordAsync(model);
            
            if (result)
            {
                success = true;
            }
            else
            {
                errorMessage = "Password reset failed. The link may have expired. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred. Please try again.";
            Console.WriteLine(ex.Message);
        }
        finally
        {
            isLoading = false;
        }
    }
}

@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
        <a class="navbar-brand" href="">
            <span>ðŸŽ¶ RemixHub</span>
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto">
                <li class="nav-item">
                    <a class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door"></span> Home
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="explore">
                        <span class="bi bi-compass"></span> Explore
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="search">
                        <span class="bi bi-search"></span> Search
                    </a>
                </li>
            </ul>

            <AuthorizeView>
                <Authorized Context="authContext">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link btn btn-outline-success me-2" href="upload">
                                <span class="bi bi-cloud-upload"></span> Upload
                            </a>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <span class="bi bi-person-circle"></span> @authContext.User.Identity?.Name
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdown">
                                <li><a class="dropdown-item" href="dashboard"><span class="bi bi-speedometer2"></span> Dashboard</a></li>
                                <li><a class="dropdown-item" href="mytracks"><span class="bi bi-music-note-list"></span> My Tracks</a></li>
                                <li><a class="dropdown-item" href="profile"><span class="bi bi-person"></span> Profile</a></li>
                                <AuthorizeView Roles="Admin">
                                    <Authorized Context="adminContext">
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" href="admin"><span class="bi bi-shield-lock"></span> Admin Panel</a></li>
                                    </Authorized>
                                </AuthorizeView>
                                <li><hr class="dropdown-divider"></li>
                                <li><button class="dropdown-item" @onclick="LogoutUser"><span class="bi bi-box-arrow-right"></span> Logout</button></li>
                            </ul>
                        </li>
                    </ul>
                </Authorized>
                <NotAuthorized>
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link btn btn-outline-primary me-2" href="login">Login</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link btn btn-primary" href="register">Register</a>
                        </li>
                    </ul>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>
</nav>

@code {
    private async Task LogoutUser()
    {
        var authStateProvider = (JwtAuthenticationStateProvider)AuthStateProvider;
        await authStateProvider.LogoutAsync();
        NavigationManager.NavigateTo("/");
    }
}
